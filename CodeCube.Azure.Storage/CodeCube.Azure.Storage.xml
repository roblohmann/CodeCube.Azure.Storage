<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeCube.Azure.Storage</name>
    </assembly>
    <members>
        <member name="F:CodeCube.Azure.Storage.BaseManager.Connectionstring">
            <summary>
            The connectionstring to the storage
            </summary>
        </member>
        <member name="T:CodeCube.Azure.Storage.BlobStorageManager">
            <summary>
            Manager class to connect to a blob storage and upload or download blobs.
            </summary>
        </member>
        <member name="M:CodeCube.Azure.Storage.BlobStorageManager.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for this class which requires the accountname and accesskey for the blobstorage.
            Container name is specific for each action on this blobstorage account.
            </summary>
            <param name="url">The URL to the BLOB-storage.</param>
            <param name="accountName">The accountname for the blobstorage</param>
            <param name="accessKey">The accesskey for the blobstorage</param>
        </member>
        <member name="M:CodeCube.Azure.Storage.BlobStorageManager.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Constructor for this class which requires the accountname and accesskey for the blobstorage.
            Container name is specific for each action on this blobstorage account.
            </summary>
            <param name="url">The URL to the BLOB-storage.</param>
            <param name="accountName">The accountname for the blobstorage</param>
            <param name="accessKey">The accesskey for the blobstorage</param>
        </member>
        <member name="M:CodeCube.Azure.Storage.BlobStorageManager.#ctor(System.String)">
            <summary>
            Constructor for this class which requires an connectionstring for the blobstorage.
            Container name is specific for each action on this blobstorage account.
            </summary>
            <param name="connectionstring"></param>
        </member>
        <member name="M:CodeCube.Azure.Storage.BlobStorageManager.StoreFile(System.String,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Stores a file in the blob-storage.
            </summary>
            <param name="filename">The filename of the blob.</param>
            <param name="fileContent">The content for the blob as a stream.</param>
            <param name="container">The containername where to store the blob. If the container doesn't exist it will be created.</param>
            <param name="cancellationToken">The cancellationtoken.</param>
            <returns>The URI for the blobfile.</returns>
        </member>
        <member name="M:CodeCube.Azure.Storage.BlobStorageManager.StoreFile(System.String,System.Byte[],System.String,System.Threading.CancellationToken)">
            <summary>
            Stores a file in the blob-storage.
            </summary>
            <param name="filename">The filename of the blob.</param>
            <param name="bytes">The content for the blob in bytes.</param>
            <param name="container">The containername where to store the blob. If the container doesn't exist it will be created.</param>
            <param name="cancellationToken">The cancellationtoken.</param>
            <returns>The URI for the blobfile.</returns>
        </member>
        <member name="M:CodeCube.Azure.Storage.BlobStorageManager.GetBytes(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified file from the BLOB-storage.
            </summary>
            <param name="filename">The full filename for the blob to retrieve.</param>
            <param name="container">The name of the conatiner where the blob is stored.</param>
            <param name="cancellationToken">The cancellationtoken.</param>
            <returns>The bytearray for the specified blob.</returns>
        </member>
        <member name="M:CodeCube.Azure.Storage.BlobStorageManager.GetString(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the specified file as string.
            </summary>
            <param name="filename">The full filename for the blob to retrieve.</param>
            <param name="container">The name of the conatiner where the blob is stored.</param>
            <param name="cancellationToken">The cancellationtoken.</param>
            <returns>The specified file as string.</returns>
        </member>
        <member name="T:CodeCube.Azure.Storage.Enum.EStorageType">
            <summary>
            The type of of storages.
            </summary>
        </member>
        <member name="M:CodeCube.Azure.Storage.Interfaces.IStorageFactory.GetBlobStorageManager(System.String,System.String,System.String)">
            <summary>
            Retrieve an instance of the <see cref="T:CodeCube.Azure.Storage.BlobStorageManager"/>.
            </summary>
            <param name="uri">The URI to the <see cref="T:CodeCube.Azure.Storage.BlobStorageManager"/></param>
            <param name="blobStorageAccountname">The accountname for the blob.</param>
            <param name="blobAccesskey">The access-key for the storage</param>
            <returns>An instance of the <see cref="T:CodeCube.Azure.Storage.BlobStorageManager"/>.</returns>
        </member>
        <member name="M:CodeCube.Azure.Storage.Interfaces.IStorageFactory.GetBlobStorageManager(System.String)">
            <summary>
            Retrieve an instance of the <see cref="T:CodeCube.Azure.Storage.BlobStorageManager"/>.
            </summary>
            <param name="connectionstring">The connectionstring to the blob storage</param>
            <returns>An instance of the <see cref="T:CodeCube.Azure.Storage.BlobStorageManager"/>.</returns>
        </member>
        <member name="M:CodeCube.Azure.Storage.Interfaces.IStorageFactory.GetTableStorageManager(System.String,System.String)">
            <summary>
            Retrieve an instance of the <see cref="T:CodeCube.Azure.Storage.TableStorageManager"/>.
            </summary>
            <param name="tableConnectionstring">The connectionstring to the TABLE-storage.</param>
            <param name="tableName">The name of the table to connect to.</param>
            <returns>An instance of the <see cref="T:CodeCube.Azure.Storage.TableStorageManager"/>.</returns>
        </member>
        <member name="M:CodeCube.Azure.Storage.Interfaces.IStorageFactory.GetQueueManager(System.String,System.String)">
            <summary>
            Retrieve an instance of the <see cref="T:CodeCube.Azure.Storage.QueueManager"/>.
            </summary>
            <param name="connectionstring">The connectionstring to the queue</param>
            <param name="queueName">The name of the queue to connect to</param>
            <returns>An instance of the <see cref="T:CodeCube.Azure.Storage.QueueManager"/></returns>
            <exception cref="T:System.ArgumentNullException">Throws an <see cref="T:System.ArgumentNullException"/> when parameters are forgotten.</exception>
        </member>
        <member name="T:CodeCube.Azure.Storage.QueueManager">
            <summary>
            Manager class to connect to one single Azure Storage Queue
            </summary>
        </member>
        <member name="M:CodeCube.Azure.Storage.QueueManager.ConnectAsync">
            <summary>
            Connect to the desired queue and return the client.
            </summary>
            <returns>The queueclient.</returns>
        </member>
        <member name="T:CodeCube.Azure.Storage.StorageFactory">
            <summary>
            Helper class to retrieve the right helper to communicate with several types of storage.
            </summary>
        </member>
        <member name="M:CodeCube.Azure.Storage.StorageFactory.GetBlobStorageManager(System.String,System.String,System.String)">
            <summary>
            Retrieve an instance of the <see cref="T:CodeCube.Azure.Storage.BlobStorageManager"/>.
            </summary>
            <param name="uri">The URI to the <see cref="T:CodeCube.Azure.Storage.BlobStorageManager"/></param>
            <param name="blobStorageAccountname">The accountname for the blob.</param>
            <param name="blobAccesskey">The access-key for the storage</param>
            <returns>An instance of the <see cref="T:CodeCube.Azure.Storage.BlobStorageManager"/>.</returns>
        </member>
        <member name="M:CodeCube.Azure.Storage.StorageFactory.GetBlobStorageManager(System.String)">
            <summary>
            Retrieve an instance of the <see cref="T:CodeCube.Azure.Storage.BlobStorageManager"/>.
            </summary>
            <param name="connectionstring">The connectionstring to the blob storage</param>
            <returns>An instance of the <see cref="T:CodeCube.Azure.Storage.BlobStorageManager"/>.</returns>
        </member>
        <member name="M:CodeCube.Azure.Storage.StorageFactory.GetTableStorageManager(System.String,System.String)">
            <summary>
            Retrieve an instance of the <see cref="T:CodeCube.Azure.Storage.TableStorageManager"/>.
            </summary>
            <param name="tableConnectionstring">The connectionstring to the TABLE-storage.</param>
            <param name="tableName">The name of the table to connect to.</param>
            <returns>An instance of the <see cref="T:CodeCube.Azure.Storage.TableStorageManager"/>.</returns>
        </member>
        <member name="M:CodeCube.Azure.Storage.StorageFactory.GetQueueManager(System.String,System.String)">
            <summary>
            Retrieve an instance of the <see cref="T:CodeCube.Azure.Storage.QueueManager"/>.
            </summary>
            <param name="connectionstring">The connectionstring to the queue</param>
            <param name="queueName">The name of the queue to connect to</param>
            <returns>An instance of the <see cref="T:CodeCube.Azure.Storage.QueueManager"/></returns>
            <exception cref="T:System.ArgumentNullException">Throws an <see cref="T:System.ArgumentNullException"/> when parameters are forgotten.</exception>
        </member>
        <member name="T:CodeCube.Azure.Storage.TableStorageManager">
            <summary>
            Manager class to communicate with azure table storage
            </summary>
        </member>
        <member name="M:CodeCube.Azure.Storage.TableStorageManager.InsertOrReplace``1(``0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Insert the specified entity to the table.
            </summary>
            <typeparam name="T">The type of the entity. Must inherit from TableEntity.</typeparam>
            <param name="entity">The entity to insert or replace in the tablestorage</param>
            <param name="insertOnly">Indicates wether an TableEntity is only allowed to be inserted. Defaults to 'True'</param>
            <param name="cancellationToken">The cancellationtoken.</param>
            <returns></returns>
        </member>
        <member name="M:CodeCube.Azure.Storage.TableStorageManager.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Insert a batch of entities.
            </summary>
            <typeparam name="T">The type for the entities. Must inherit from TableEntity.</typeparam>
            <param name="entities">The batch of entities to insert.</param>
            <param name="cancellationToken">The cancellationtoken.</param>
            <returns></returns>
        </member>
        <member name="M:CodeCube.Azure.Storage.TableStorageManager.Retrieve``1(System.Threading.CancellationToken)">
            <summary>
            Retrieve all entities of the given type.
            </summary>
            <param name="cancellationToken">The cancellationtoken.</param>
            <typeparam name="T">The type of entity. Must inherit from TableEntity</typeparam>
            <returns>All entities in the specified table matching the type.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:CodeCube.Azure.Storage.TableStorageManager.Retrieve``1(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an entity from the tablestorage
            </summary>
            <typeparam name="T">The type for the entities. Must inherit from TableEntity.</typeparam>
            <param name="partitionKey">The partitionkey of the entity to retrieve.</param>
            <param name="rowKey">The rowkey of the entity to retrieve.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:CodeCube.Azure.Storage.TableStorageManager.Delete``1(``0,System.Threading.CancellationToken)">
            <summary>
            Delete the specified entity from the tablestorage.
            </summary>
            <typeparam name="T">The type for the entities. Must inherit from TableEntity.</typeparam>
            <param name="entity">The entity to delete.</param>
            <param name="cancellationToken">The cancellationtoken.</param>
            <returns></returns>
        </member>
    </members>
</doc>
