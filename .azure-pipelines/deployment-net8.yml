trigger:
- master  # Adjust the branch as needed

pool:
  vmImage: 'ubuntu-latest'  # You can choose a different image depending on your requirements

variables:
  buildConfiguration: 'Release'
  Version.Major: '8'
  Version.Minor: '0'
  ProjectToPack: 'CodeCube.Azure.Storage.csproj'
  system.debug: true

name: $(Version.Major).$(Version.Minor).$(Rev:r)

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: 'Build and Test'
    steps:
    - task: Assembly-Info-NetCore@3
      displayName: 'Set Assembly Info'
      inputs:
        Path: '$(Build.SourcesDirectory)'
        FileNames: '**/$(ProjectToPack)'
        InsertAttributes: true
        FileEncoding: 'auto'
        WriteBOM: false
        VersionNumber: '$(Build.BuildNumber)'
        FileVersionNumber: '$(Build.BuildNumber)'
        InformationalVersion: '$(Build.BuildNumber)'
        PackageVersion: '$(Build.BuildNumber)'
        LogLevel: 'verbose'
        FailOnWarning: false
        DisableTelemetry: false

    - task: UseDotNet@2
      displayName: 'Use .NET 8'
      inputs:
        packageType: 'sdk'
        version: '8.x'
        
    - task: NuGetCommand@2
      displayName: 'Restore NuGet Packages'
      inputs:
        command: 'restore'
        restoreSolution: '**/*.sln'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build Project'
      inputs:
        command: 'build'
        projects: '**/$(ProjectToPack)'
        arguments: '--configuration $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: 'Run tests'
      inputs:
        command: 'test'
        projects: '**/*.Tests.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# - stage: Deploy
#   jobs:
#   - job: Deploy
#     displayName: 'Deploy to NuGet'
#     steps:
#     - task: UseDotNet@2
#       displayName: 'Install .NET 8'
#       inputs:
#         packageType: 'sdk'
#         version: '8.x'
    
#     - task: DownloadBuildArtifacts@1
#       displayName: 'Download Build Artifact'
#       inputs:
#         buildType: 'current'
#         downloadType: 'single'
#         artifactName: 'drop'
#         downloadPath: '$(Build.ArtifactStagingDirectory)'

#     - task: NuGetCommand@2
#       displayName: 'Pack NuGet'
#       inputs:
#         command: 'pack'
#         packagesToPack: '**/$(ProjectToPack)'
#         versioningScheme: 'byBuildNumber'

#     - task: NuGetCommand@2
#       displayName: 'Push NuGet'
#       inputs:
#         command: 'push'
#         packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
#         nuGetFeedType: 'external'
#         publishFeedCredentials: 'nuget.org'
